{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","input","document","addEventListener","event","setState","key","removeEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,MAFX,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,MAAOG,EAAME,WAPnC,kCAWE,WAA8B,IAAD,OAC3BJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEJ,MAAOG,EAAME,WAbnC,oBAiBE,WACE,IAAQL,EAAUO,KAAKR,MAAfC,MAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIR,EAAD,mCAE+BA,EAF/B,KACG,kCAxBd,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.42ee9dc5.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  input: string | null,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    input: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ input: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ input: event.key });\n    });\n  }\n\n  render() {\n    const { input } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!input\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${input}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}